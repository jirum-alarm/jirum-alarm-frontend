name: deploy-web-staging

on:
  push:
    branches:
      - main
    paths:
      - apps/web/**
      - packages/**
      - pnpm-lock.yaml
      - turbo.json
      - .github/workflows/deploy-web-staging.yml
  workflow_dispatch:

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment:
      name: staging
      
    outputs:
      image-tag: ${{ steps.meta.outputs.version }}
      image-digest: ${{ steps.build.outputs.digest }}
    
    env:
      DOCKER_BUILDKIT: 1
      COMPOSE_DOCKER_CLI_BUILD: 1
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
          config-inline: |
            [worker.oci]
              max-parallelism = 4

      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USER }}/jirum-alarm-frontend-web-dev
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-,format=short
            type=raw,value=develop,enable={{is_default_branch}}
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.title=Jirum Alarm Web Frontend
            org.opencontainers.image.description=Staging deployment
            org.opencontainers.image.vendor=${{ github.repository_owner }}
            maintainer=${{ github.repository_owner }}


      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/web/deploy/development/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            NEXT_PUBLIC_SERVICE_URL=${{ vars.NEXT_PUBLIC_SERVICE_URL }}
            API_URL=${{ vars.API_URL }}
            NODE_ENV=${{ vars.NODE_ENV }}
          provenance: true
          sbom: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USER }}/jirum-alarm-frontend-web-dev:${{ steps.meta.outputs.version }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          exit-code: '0'
        continue-on-error: true

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  deploy:
    name: Deploy to Kubernetes
    needs: build-and-push
    runs-on: ubuntu-latest
    timeout-minutes: 15
    environment:
      name: staging
    
    steps:
      - name: Checkout infrastructure repository
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.INFRA_GITHUB_REPOSITORY }}
          ref: main
          token: ${{ secrets.ACTION_TOKEN }}
          path: infra

      - name: Install yq
        run: |
          set -euo pipefail
          YQ_VERSION="v4.44.3"
          sudo wget -qO /usr/local/bin/yq "https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64"
          sudo chmod +x /usr/local/bin/yq
          yq --version

      - name: Update Kubernetes manifest
        working-directory: infra
        run: |
          set -euo pipefail
          DEPLOYMENT_FILE="server/jirum-alarm-frontend-web/development/jirum-alarm-frontend-web-deployment.yaml"

          # Build image url
          export IMAGE_URL="${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USER }}/jirum-alarm-frontend-web-dev:${{ needs.build-and-push.outputs.image-tag }}"
          yq eval -i '.spec.template.spec.containers[0].image = strenv(IMAGE_URL)' "$DEPLOYMENT_FILE"

          # Change cause
          export CHANGE_CAUSE="Deployed by GitHub Actions - ${{ github.sha }}"
          yq eval -i '.spec.template.metadata.annotations."kubernetes.io/change-cause" = strenv(CHANGE_CAUSE)' "$DEPLOYMENT_FILE"

          # Timestamp to trigger rollout
          export TIMESTAMP="$(date -u +%Y-%m-%dT%H:%M:%SZ)"
          yq eval -i '.spec.template.metadata.annotations."deployment.kubernetes.io/revision-timestamp" = strenv(TIMESTAMP)' "$DEPLOYMENT_FILE"

      - name: Validate Kubernetes manifest
        working-directory: infra
        run: |
          set -euo pipefail
          yq eval '.' server/jirum-alarm-frontend-web/development/*.yaml > /dev/null

      - name: Commit files
        working-directory: infra
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"
          git add .
          git commit -am "Update image tag"
          git push -u origin main